/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Toolkit;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Penilla
 */
public class AgregarProducto extends javax.swing.JDialog {

    /**
     * Creates new form AgregarProducto
     */
    Hashtable<String,Producto> tabla_Productos;//Variable Global
    public AgregarProducto(java.awt.Frame parent, boolean modal, Hashtable<String,Producto> tabla_Productos) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.tabla_Productos = tabla_Productos;//Capturando el hash que llega como parametro y asigandolo a la variable global
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAgregarProducto = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        lblIdBodega = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtIdBodega = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAgregarProducto.setText("AGREGAR PRODUCTO");

        lblNombre.setText("Nombre *:");

        lblPrecio.setText("Precio *:");

        lblCantidad.setText("Cantidad *:");

        lblIdBodega.setText("ID Bodega *:");

        txtNombre.setToolTipText("Ingrese el Nombre del Producto");
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtPrecio.setToolTipText("Ingrese el Precio del Producto");
        txtPrecio.setEnabled(false);
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        txtIdBodega.setToolTipText("Ingrese el ID de la Bodega donde se Almacena el Producto");
        txtIdBodega.setEnabled(false);
        txtIdBodega.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdBodegaKeyTyped(evt);
            }
        });

        txtCantidad.setToolTipText("Ingrese la Categoria del Producto");
        txtCantidad.setEnabled(false);
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregarProducto.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Presione para Guardar el Producto");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("Presione para Limpiar el Formulario");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/magnifier.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Presione para Buscar el Producto");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(lblAgregarProducto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPrecio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblIdBodega)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIdBodega, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblNombre)
                                .addGap(38, 38, 38)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAgregarProducto)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidad)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdBodega)
                    .addComponent(txtIdBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnLimpiar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() >= 97 && evt.getKeyChar() <= 122 || evt.getKeyChar() >= 65 && evt.getKeyChar() <= 90 || evt.getKeyChar() == 32 || evt.getKeyChar() == 8)
        {

        }
        else
        {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "El campo solo recibe letras mayusculas y/o munisculas", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57 || evt.getKeyChar() == 8)
        {

        }
        else
        {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "El campo solo recibe numeros", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57 || evt.getKeyChar() == 8)
        {

        }
        else
        {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "El campo solo recibe numeros", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtIdBodegaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdBodegaKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57 || evt.getKeyChar() == 8)
        {

        }
        else
        {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "El campo solo recibe numeros", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtIdBodegaKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String llave = extraerLlave(txtNombre.getText());
        if(tabla_Productos.containsKey(llave))
        {
            JOptionPane.showMessageDialog(null, "El producto a agregar ya existe", "Advertencia!", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            txtPrecio.setEnabled(true);
            txtCantidad.setEnabled(true);
            txtIdBodega.setEnabled(true);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtNombre.setText("");
        txtPrecio.setText("");
        txtCantidad.setText("");
        txtIdBodega.setText("");
        txtPrecio.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtIdBodega.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if(!txtNombre.getText().equals("") && !txtPrecio.getText().equals("") && !txtCantidad.getText().equals("") &&
                !txtIdBodega.getText().equals(""))
        {            
            String nombre= txtNombre.getText();
            String categoria= asignarCategoria(txtIdBodega.getText());
            double precio= Double.parseDouble(txtPrecio.getText());
            int cantidad= Integer.parseInt(txtCantidad.getText());
            String id_bodega= txtIdBodega.getText();
            
            Producto miProducto = new Producto(nombre, categoria, precio, cantidad, id_bodega);
            
            Hashtable<String,Producto> archivo = new Hashtable<String, Producto>();
            
            try 
            {
                lector.abrir();
                Producto productoArchivo;
                do
                {
                    productoArchivo = lector.leer();
                    if(productoArchivo != null)
                    {
                        archivo.put(asignarLlave(archivo), productoArchivo);
                    }
                }
                while(productoArchivo != null);                
                lector.cerrar();                               
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(AgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (ClassNotFoundException ex) {
                Logger.getLogger(AgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Agregar nuevo producto
                tabla_Productos.put(asignarLlave(tabla_Productos), miProducto);
                archivo.put(asignarLlave(archivo), miProducto);
            
            try {
                //Escribir
                escritor.abrir();
                Enumeration<Producto> productos = archivo.elements();
                while(productos.hasMoreElements())
                {
                    Producto p = productos.nextElement();
                    escritor.escribir(p);
                }
                escritor.cerrar();
            } catch (IOException ex) {
                Logger.getLogger(AgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }           
            
            JOptionPane.showMessageDialog(null, "Producto Agregado con Exito!", "Exito!", JOptionPane.INFORMATION_MESSAGE);
            btnLimpiarActionPerformed(evt);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Los campos con * son obligatorios", "Advertencia!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    public static String asignarCategoria(String id_bodega)
    {
        switch(id_bodega)
        {
            case "1":
            {
                return "Granos";
            }
            case "2":
            {
                return "Lacteos";
            }
            case "3":
            {
                return "Licores";
            }
            default:
            {
                JOptionPane.showMessageDialog(null, "Opcion no valida, la Bodega no existe");
            }
        }
        return "Sin Categoria";
    }
    
    public String extraerLlave (String nombre)
    {
        String llave="";
        Enumeration<Producto> productos = tabla_Productos.elements();
        Enumeration<String> llaves = tabla_Productos.keys();
        
        while(productos.hasMoreElements())
        {
            Producto miProducto=productos.nextElement();
            if(miProducto.getNombre().equals(nombre))
            {
                llave=llaves.nextElement();
                break;
            }
            else
            {
                llaves.nextElement();
            }
        }        
        return llave;
    }
    
    public String asignarLlave (Hashtable<String,Producto> tabla_Productos)
    {
        int llave=0;
        Enumeration<String> llaves = tabla_Productos.keys();
        while (llaves.hasMoreElements()) 
        {
            llave=Integer.parseInt(llaves.nextElement());
            break;
            
        }
        return ""+(llave+1);
    }
    
    EntradaProducto lector = new EntradaProducto();
    SalidaProducto escritor = new SalidaProducto();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel lblAgregarProducto;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblIdBodega;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtIdBodega;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
