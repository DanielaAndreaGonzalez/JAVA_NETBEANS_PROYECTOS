/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.IOException;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Penilla
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    Hashtable<String,Bodega> tabla_Bodegas = new Hashtable<String, Bodega>();
        Bodega bodega1 = new Bodega("1", "Almacena Granos", "Cali");
        Bodega bodega2 = new Bodega("2", "Almacena Lacteos", "Bogota");
        Bodega bodega3 = new Bodega("3", "Almacena Licores", "Medellin");
    Hashtable<String,Producto> tabla_Productos = new Hashtable<String, Producto>();
    EntradaProducto lector = new EntradaProducto();
    public GUI() throws IOException, ClassNotFoundException {
        initComponents();
        this.setLocationRelativeTo(null);
        tablaProductos.setAutoCreateRowSorter(true);
        tabla_Bodegas.put(bodega1.getID(), bodega1);
        tabla_Bodegas.put(bodega2.getID(), bodega2);
        tabla_Bodegas.put(bodega3.getID(), bodega3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        btnAgregarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        btnGenerarFactura = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbltitulo.setText("MI TIENDA");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Categoria", "Precio", "Cantidad", "Bodega"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.setGridColor(new java.awt.Color(51, 204, 0));
        jScrollPane1.setViewportView(tablaProductos);

        btnAgregarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregar.png"))); // NOI18N
        btnAgregarProducto.setToolTipText("Presione para Agregar un Producto");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        btnEliminarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminarProducto.setToolTipText("Presione para Eliminar un Producto");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });

        btnGenerarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/documento.png"))); // NOI18N
        btnGenerarFactura.setToolTipText("Presione para Generar Factura");
        btnGenerarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarFacturaActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salir.jpg"))); // NOI18N
        btnSalir.setToolTipText("Presione para Salir de la Tienda");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGenerarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(lbltitulo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGenerarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnActualizar)
                                .addGap(80, 80, 80)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        // TODO add your handling code here:
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgregarProducto dialog = new AgregarProducto(new javax.swing.JFrame(), true, tabla_Productos);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        llenarTabla(tabla_Productos);                       
                    }
                });
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void btnGenerarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarFacturaActionPerformed
        // TODO add your handling code here:
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GenerarFactura dialog = new GenerarFactura(new javax.swing.JFrame(), true, tabla_Productos, tabla_Bodegas);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_btnGenerarFacturaActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        // TODO add your handling code here:
        /* Create and display the dialog*/
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EliminarProducto dialog = new EliminarProducto(new javax.swing.JFrame(), true, tabla_Productos);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        llenarTabla(tabla_Productos);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try {
            // TODO add your handling code here:
            lector.abrir();
        
            Producto miProducto;
            do
            {
                miProducto = lector.leer();
                if(miProducto != null)
                {
                    tabla_Productos.put(asignarLlave(), miProducto);
                }
            }
            while(miProducto != null);
            lector.cerrar();
            llenarTabla(tabla_Productos);
        }
        catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try //intenta crear la GUI y de no poder captura el error generado
                {
                    new GUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void llenarTabla(Hashtable<String,Producto> tabla_Productos)
    {
        limpiarTabla();
        Enumeration<Producto> productos = tabla_Productos.elements();
        Enumeration<String> llaves = tabla_Productos.keys();
        int j=0;
        while(productos.hasMoreElements())
        {
            Producto miProducto=productos.nextElement();
            //JOptionPane.showMessageDialog(null, miProducto.getNombre());
            for(int i=0; i<=5; i++)
            {
                switch(i)
                {
                    case 0:
                    {
                        tablaProductos.setValueAt(llaves.nextElement(), j, i);
                        break;
                    }
                    case 1:
                    {
                        tablaProductos.setValueAt(miProducto.getNombre(), j, i);
                        break;
                    }
                    case 2:
                    {
                        tablaProductos.setValueAt(miProducto.getCategoria(), j, i);
                        break;
                    }
                    case 3:
                    {
                        tablaProductos.setValueAt(miProducto.getPrecio(), j, i);
                        break;
                    }
                    case 4:
                    {
                        tablaProductos.setValueAt(miProducto.getCantidad(), j, i);
                        break;
                    }
                    case 5:
                    {
                        String ciudad = asociarCiudad(tabla_Bodegas, miProducto.getId_bodega());
                        tablaProductos.setValueAt(ciudad, j, i);
                        break;
                    }
                }
            }
            j++;
        } 
    }
    
    public static String asociarCiudad(Hashtable<String, Bodega> tabla_Bodegas, String id_bodega)
    {
        Enumeration<Bodega> bodegas = tabla_Bodegas.elements();
        Enumeration<String> llaves = tabla_Bodegas.keys();
        String ciudad="";
        
        while(bodegas.hasMoreElements())
        {
            if(id_bodega.equals(llaves.nextElement()))
            {
                ciudad=tabla_Bodegas.get(id_bodega).getCiudad();
                break;
            }
        }
        
        return ciudad;
    }
    
    public void limpiarTabla ()
    {
        for(int j=0; j<tablaProductos.getModel().getRowCount(); j++)
        {
            for(int i=0; i<=5; i++)
            {
                switch(i)
                {
                    case 0:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 1:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 2:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 3:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 4:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 5:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                }
            }
        }
    }
    
    public String asignarLlave ()
    {
        int llave=0;
        Enumeration<String> llaves = tabla_Productos.keys();
        while (llaves.hasMoreElements()) 
        {
            llave=Integer.parseInt(llaves.nextElement());
            break;
            
        }
        return ""+(llave+1);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnGenerarFactura;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JTable tablaProductos;
    // End of variables declaration//GEN-END:variables
}
