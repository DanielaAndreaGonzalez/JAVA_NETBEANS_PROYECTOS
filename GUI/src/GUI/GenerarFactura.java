/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.JOptionPane;

/**
 *
 * @author Penilla
 */
public class GenerarFactura extends javax.swing.JDialog {

    /**
     * Creates new form GenerarFactura
     */
    Hashtable<String,Producto> tabla_Productos;
    Hashtable<String,Bodega> tabla_Bodegas;
    public GenerarFactura(java.awt.Frame parent, boolean modal, Hashtable<String,Producto> tabla_Productos, Hashtable<String,Bodega> tabla_Bodegas) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.tabla_Bodegas = tabla_Bodegas;
        this.tabla_Productos = tabla_Productos;
        llenarTabla(tabla_Productos);
        calcularPrecioTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        lblPrecioNeto = new javax.swing.JLabel();
        lblIva = new javax.swing.JLabel();
        lblPrecioTotal = new javax.swing.JLabel();
        txtPrecioNeto = new javax.swing.JTextField();
        txtIva = new javax.swing.JTextField();
        txtPrecioTotal = new javax.swing.JTextField();
        btnImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setText("DETALLE FACTURA");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Categoria", "Precio", "Cantidad", "Bodega"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        lblPrecioNeto.setText("Precio Neto de la Venta:");

        lblIva.setText("Iva de la Venta:");

        lblPrecioTotal.setText("Precio Total de la Venta:");

        txtPrecioNeto.setToolTipText("Precio Neto de Todos los Productos");
        txtPrecioNeto.setEnabled(false);

        txtIva.setToolTipText("Iva de Todos los Productos");
        txtIva.setEnabled(false);

        txtPrecioTotal.setToolTipText("Precio Total de Todos los Productos");
        txtPrecioTotal.setEnabled(false);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/printer.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setToolTipText("Presione para Impirmir la Factura");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblIva)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblPrecioNeto)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPrecioNeto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPrecioTotal)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImprimir)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioNeto)
                    .addComponent(txtPrecioNeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIva)
                    .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioTotal)
                    .addComponent(txtPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Su Factura se Imprimi√≥ con exito\nPor favor retirela de la bandeja", "Impresora", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_btnImprimirActionPerformed

    public void llenarTabla(Hashtable<String,Producto> tabla_Productos)
    {
        limpiarTabla();
        Enumeration<Producto> productos = tabla_Productos.elements();
        Enumeration<String> llaves = tabla_Productos.keys();
        int j=0;
        while(productos.hasMoreElements())
        {
            Producto miProducto=productos.nextElement();
            for(int i=0; i<=5; i++)
            {
                switch(i)
                {
                    case 0:
                    {
                        tablaProductos.setValueAt(llaves.nextElement(), j, i);
                        break;
                    }
                    case 1:
                    {
                        tablaProductos.setValueAt(miProducto.getNombre(), j, i);
                        break;
                    }
                    case 2:
                    {
                        tablaProductos.setValueAt(miProducto.getCategoria(), j, i);
                        break;
                    }
                    case 3:
                    {
                        tablaProductos.setValueAt(miProducto.getPrecio(), j, i);
                        break;
                    }
                    case 4:
                    {
                        tablaProductos.setValueAt(miProducto.getCantidad(), j, i);
                        break;
                    }
                    case 5:
                    {
                        String ciudad = asociarCiudad(tabla_Bodegas, miProducto.getId_bodega());
                        tablaProductos.setValueAt(ciudad, j, i);
                        break;
                    }
                }
            }
            j++;
        } 
    }
    
    public static String asociarCiudad(Hashtable<String, Bodega> tabla_Bodegas, String id_bodega)
    {
        Enumeration<Bodega> bodegas = tabla_Bodegas.elements();
        Enumeration<String> llaves = tabla_Bodegas.keys();
        String ciudad="";
        
        while(bodegas.hasMoreElements())
        {
            if(id_bodega.equals(llaves.nextElement()))
            {
                ciudad=tabla_Bodegas.get(id_bodega).getCiudad();
                break;
            }
        }
        
        return ciudad;
    }
    
    public void limpiarTabla ()
    {
        for(int j=0; j<tablaProductos.getModel().getRowCount(); j++)
        {
            for(int i=0; i<=5; i++)
            {
                switch(i)
                {
                    case 0:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 1:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 2:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 3:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 4:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                    case 5:
                    {
                        tablaProductos.setValueAt("", j, i);
                        break;
                    }
                }
            }
        }
    }
    
    public void calcularPrecioTotal ()
    {
        double precioTotal=0;
        double ivaTotal=0;
        double precioNeto=0;
        
        Enumeration<Producto> productos = tabla_Productos.elements();
        
        while(productos.hasMoreElements())
        {
            Producto miProducto = productos.nextElement();
            precioTotal = precioTotal+miProducto.getPrecio();
        }
        
        ivaTotal = precioTotal*0.16;
        precioNeto = precioTotal-ivaTotal;
        
        txtIva.setText(""+ivaTotal);
        txtPrecioNeto.setText(""+precioNeto);
        txtPrecioTotal.setText(""+precioTotal);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIva;
    private javax.swing.JLabel lblPrecioNeto;
    private javax.swing.JLabel lblPrecioTotal;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtPrecioNeto;
    private javax.swing.JTextField txtPrecioTotal;
    // End of variables declaration//GEN-END:variables
}
